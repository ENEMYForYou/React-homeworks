{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandr/Documents/IT/_REACT/react-hws/hwk-02-feedback/feedback/src/Components/FeedbackOptions/FeedbackOptions.js\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackOptions(_ref) {\n  let {\n    options,\n    onChangeFeedback\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles[option],\n      onClick: () => onChangeFeedback(option),\n      children: option\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FeedbackOptions;\nFeedbackOptions.propTypes = {\n  options: propTypes.arrayOf(propTypes.string).isRequired\n};\nexport default FeedbackOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"names":["React","propTypes","styles","FeedbackOptions","options","onChangeFeedback","map","option","index","arrayOf","string","isRequired"],"sources":["/Users/oleksandr/Documents/IT/_REACT/react-hws/hwk-02-feedback/feedback/src/Components/FeedbackOptions/FeedbackOptions.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({options, onChangeFeedback}) {\n    return (\n        <div>\n            {options.map((option, index) => (\n                <button\n                    type=\"button\"\n                    key={index}\n                    className={styles[option]}\n                    onClick = {() => onChangeFeedback(option)}\n                >\n                    {option}\n                </button>\n            ))}\n        </div>\n    )\n}\n\nFeedbackOptions.propTypes = {\n    options: propTypes.arrayOf(propTypes.string).isRequired,\n}\n\nexport default FeedbackOptions;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;;AAEA,SAASC,eAAT,OAAsD;EAAA,IAA7B;IAACC,OAAD;IAAUC;EAAV,CAA6B;EAClD,oBACI;IAAA,UACKD,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACT;MACI,IAAI,EAAC,QADT;MAGI,SAAS,EAAEN,MAAM,CAACK,MAAD,CAHrB;MAII,OAAO,EAAI,MAAMF,gBAAgB,CAACE,MAAD,CAJrC;MAAA,UAMKA;IANL,GAESC,KAFT;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;KAfQL,e;AAiBTA,eAAe,CAACF,SAAhB,GAA4B;EACxBG,OAAO,EAAEH,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACS,MAA5B,EAAoCC;AADrB,CAA5B;AAIA,eAAeR,eAAf"},"metadata":{},"sourceType":"module"}