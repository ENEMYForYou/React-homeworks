{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandr/Documents/IT/_REACT/React-homeworks/src/Components/ContactList/ContactList.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport Toggler from \"../Toggler/Toggler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactList(_ref) {\n  let {\n    contacts,\n    onRemoveContact\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contacts.map(_ref2 => {\n      let {\n        id,\n        name,\n        number\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        name: name,\n        number: number,\n        onRemoveContact: () => onRemoveContact(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ContactList;\nContactList.propTypes = {\n  contact: propTypes.arrayOf(propTypes.exact({\n    id: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired\n  })),\n  onRemoveContact: propTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","propTypes","ContactListItem","Toggler","ContactList","contacts","onRemoveContact","map","id","name","number","contact","arrayOf","exact","string","isRequired","func"],"sources":["/Users/oleksandr/Documents/IT/_REACT/React-homeworks/src/Components/ContactList/ContactList.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport Toggler from \"../Toggler/Toggler\";\n\nexport default function ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onRemoveContact={() => onRemoveContact(id)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contact: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n    })\n  ),\n  onRemoveContact: propTypes.func.isRequired,\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,eAAe,SAASC,WAAT,OAAoD;EAAA,IAA/B;IAAEC,QAAF;IAAYC;EAAZ,CAA+B;EACjE,oBACE;IAAA,UACGD,QAAQ,CAACE,GAAT,CAAa;MAAA,IAAC;QAAEC,EAAF;QAAMC,IAAN;QAAYC;MAAZ,CAAD;MAAA,oBACZ,QAAC,eAAD;QAEE,IAAI,EAAED,IAFR;QAGE,MAAM,EAAEC,MAHV;QAIE,eAAe,EAAE,MAAMJ,eAAe,CAACE,EAAD;MAJxC,GACOA,EADP;QAAA;QAAA;QAAA;MAAA,QADY;IAAA,CAAb;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;KAbuBJ,W;AAexBA,WAAW,CAACH,SAAZ,GAAwB;EACtBU,OAAO,EAAEV,SAAS,CAACW,OAAV,CACPX,SAAS,CAACY,KAAV,CAAgB;IACdL,EAAE,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADP;IAEdN,IAAI,EAAER,SAAS,CAACa,MAAV,CAAiBC,UAFT;IAGdL,MAAM,EAAET,SAAS,CAACa,MAAV,CAAiBC;EAHX,CAAhB,CADO,CADa;EAQtBT,eAAe,EAAEL,SAAS,CAACe,IAAV,CAAeD;AARV,CAAxB"},"metadata":{},"sourceType":"module"}