{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandr/Documents/IT/_REACT/React-homeworks/src/Components/ContactList/ContactList.js\";\nimport React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactList(_ref) {\n  let {\n    contacts,\n    onRemoveContact\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contacts.map(_ref2 => {\n      let {\n        id,\n        name,\n        number\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        name: name,\n        number: number,\n        onRemoveContact: () => onRemoveContact(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = ContactList;\n;\nContactList.propTypes = {\n  contact: propTypes.arrayOf(propTypes.exact({\n    id: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired\n  })),\n  onRemoveContact: propTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","ContactListItem","propTypes","ContactList","contacts","onRemoveContact","map","id","name","number","contact","arrayOf","exact","string","isRequired","func"],"sources":["/Users/oleksandr/Documents/IT/_REACT/React-homeworks/src/Components/ContactList/ContactList.js"],"sourcesContent":["import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport propTypes from 'prop-types';\n\nexport default function ContactList ({contacts, onRemoveContact}) {\n    return (\n        <ul>\n            {contacts.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    onRemoveContact={() => onRemoveContact(id)}\n                />\n            ))}\n        </ul>\n    )\n};\n    \nContactList.propTypes = {\n    contact: propTypes.arrayOf(propTypes.exact({\n        id: propTypes.string.isRequired,\n        name: propTypes.string.isRequired,\n        number: propTypes.string.isRequired\n    })),\n    onRemoveContact: propTypes.func.isRequired,\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,SAASC,WAAT,OAAmD;EAAA,IAA7B;IAACC,QAAD;IAAWC;EAAX,CAA6B;EAC9D,oBACI;IAAA,UACKD,QAAQ,CAACE,GAAT,CAAa;MAAA,IAAC;QAAEC,EAAF;QAAMC,IAAN;QAAYC;MAAZ,CAAD;MAAA,oBACV,QAAC,eAAD;QAEI,IAAI,EAAED,IAFV;QAGI,MAAM,EAAEC,MAHZ;QAII,eAAe,EAAE,MAAMJ,eAAe,CAACE,EAAD;MAJ1C,GACSA,EADT;QAAA;QAAA;QAAA;MAAA,QADU;IAAA,CAAb;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;KAbuBJ,W;AAavB;AAEDA,WAAW,CAACD,SAAZ,GAAwB;EACpBQ,OAAO,EAAER,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;IACvCL,EAAE,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADkB;IAEvCN,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAFgB;IAGvCL,MAAM,EAAEP,SAAS,CAACW,MAAV,CAAiBC;EAHc,CAAhB,CAAlB,CADW;EAMpBT,eAAe,EAAEH,SAAS,CAACa,IAAV,CAAeD;AANZ,CAAxB"},"metadata":{},"sourceType":"module"}